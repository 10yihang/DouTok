// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: v1/comment.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // 评论id
	VideoId       int64                  `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`               // 视频id
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                               // 评论内容
	Date          string                 `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`                                     // 评论日期
	LikeCount     string                 `protobuf:"bytes,5,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`          // 点赞数
	ReplyCount    string                 `protobuf:"bytes,6,opt,name=reply_count,json=replyCount,proto3" json:"reply_count,omitempty"`       // 回复数
	UserId        int64                  `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	ParentId      int64                  `protobuf:"varint,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`            // 父评论id
	ReplyUserId   int64                  `protobuf:"varint,9,opt,name=reply_user_id,json=replyUserId,proto3" json:"reply_user_id,omitempty"` // 回复用户id
	Comments      []*Comment             `protobuf:"bytes,10,rep,name=comments,proto3" json:"comments,omitempty"`                            // 子评论
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_v1_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Comment) GetLikeCount() string {
	if x != nil {
		return x.LikeCount
	}
	return ""
}

func (x *Comment) GetReplyCount() string {
	if x != nil {
		return x.ReplyCount
	}
	return ""
}

func (x *Comment) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Comment) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Comment) GetReplyUserId() int64 {
	if x != nil {
		return x.ReplyUserId
	}
	return 0
}

func (x *Comment) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`               // 视频id
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                               // 评论内容
	ParentId      int64                  `protobuf:"varint,4,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`            // 父评论id
	ReplyUserId   int64                  `protobuf:"varint,5,opt,name=reply_user_id,json=replyUserId,proto3" json:"reply_user_id,omitempty"` // 回复用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_v1_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *CreateCommentRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateCommentRequest) GetReplyUserId() int64 {
	if x != nil {
		return x.ReplyUserId
	}
	return 0
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Comment       *Comment               `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_v1_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type RemoveCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论id
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCommentRequest) Reset() {
	*x = RemoveCommentRequest{}
	mi := &file_v1_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentRequest) ProtoMessage() {}

func (x *RemoveCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentRequest.ProtoReflect.Descriptor instead.
func (*RemoveCommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{3}
}

func (x *RemoveCommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *RemoveCommentRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RemoveCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveCommentResponse) Reset() {
	*x = RemoveCommentResponse{}
	mi := &file_v1_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCommentResponse) ProtoMessage() {}

func (x *RemoveCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCommentResponse.ProtoReflect.Descriptor instead.
func (*RemoveCommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveCommentResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

type ListComment4VideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"` // 视频id
	Pagination    *PaginationRequest     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListComment4VideoRequest) Reset() {
	*x = ListComment4VideoRequest{}
	mi := &file_v1_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComment4VideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComment4VideoRequest) ProtoMessage() {}

func (x *ListComment4VideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComment4VideoRequest.ProtoReflect.Descriptor instead.
func (*ListComment4VideoRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{5}
}

func (x *ListComment4VideoRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *ListComment4VideoRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListComment4VideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Comments      []*Comment             `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListComment4VideoResponse) Reset() {
	*x = ListComment4VideoResponse{}
	mi := &file_v1_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListComment4VideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListComment4VideoResponse) ProtoMessage() {}

func (x *ListComment4VideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListComment4VideoResponse.ProtoReflect.Descriptor instead.
func (*ListComment4VideoResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{6}
}

func (x *ListComment4VideoResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListComment4VideoResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ListComment4VideoResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListChildComment4CommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Pagination    *PaginationRequest     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChildComment4CommentRequest) Reset() {
	*x = ListChildComment4CommentRequest{}
	mi := &file_v1_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChildComment4CommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChildComment4CommentRequest) ProtoMessage() {}

func (x *ListChildComment4CommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChildComment4CommentRequest.ProtoReflect.Descriptor instead.
func (*ListChildComment4CommentRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{7}
}

func (x *ListChildComment4CommentRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *ListChildComment4CommentRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListChildComment4CommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Comments      []*Comment             `protobuf:"bytes,2,rep,name=comments,proto3" json:"comments,omitempty"`
	Pagination    *PaginationResponse    `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChildComment4CommentResponse) Reset() {
	*x = ListChildComment4CommentResponse{}
	mi := &file_v1_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChildComment4CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChildComment4CommentResponse) ProtoMessage() {}

func (x *ListChildComment4CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChildComment4CommentResponse.ProtoReflect.Descriptor instead.
func (*ListChildComment4CommentResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{8}
}

func (x *ListChildComment4CommentResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *ListChildComment4CommentResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ListChildComment4CommentResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetCommentByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int64                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentByIdRequest) Reset() {
	*x = GetCommentByIdRequest{}
	mi := &file_v1_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentByIdRequest) ProtoMessage() {}

func (x *GetCommentByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentByIdRequest.ProtoReflect.Descriptor instead.
func (*GetCommentByIdRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommentByIdRequest) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type GetCommentByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Comment       *Comment               `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentByIdResponse) Reset() {
	*x = GetCommentByIdResponse{}
	mi := &file_v1_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentByIdResponse) ProtoMessage() {}

func (x *GetCommentByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentByIdResponse.ProtoReflect.Descriptor instead.
func (*GetCommentByIdResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{10}
}

func (x *GetCommentByIdResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *GetCommentByIdResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CountResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count         int64                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountResult) Reset() {
	*x = CountResult{}
	mi := &file_v1_comment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountResult) ProtoMessage() {}

func (x *CountResult) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountResult.ProtoReflect.Descriptor instead.
func (*CountResult) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{11}
}

func (x *CountResult) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CountResult) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type CountComment4VideoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       []int64                `protobuf:"varint,1,rep,packed,name=video_id,json=videoId,proto3" json:"video_id,omitempty"` // 视频id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountComment4VideoRequest) Reset() {
	*x = CountComment4VideoRequest{}
	mi := &file_v1_comment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountComment4VideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountComment4VideoRequest) ProtoMessage() {}

func (x *CountComment4VideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountComment4VideoRequest.ProtoReflect.Descriptor instead.
func (*CountComment4VideoRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{12}
}

func (x *CountComment4VideoRequest) GetVideoId() []int64 {
	if x != nil {
		return x.VideoId
	}
	return nil
}

type CountComment4VideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Results       []*CountResult         `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountComment4VideoResponse) Reset() {
	*x = CountComment4VideoResponse{}
	mi := &file_v1_comment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountComment4VideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountComment4VideoResponse) ProtoMessage() {}

func (x *CountComment4VideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountComment4VideoResponse.ProtoReflect.Descriptor instead.
func (*CountComment4VideoResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{13}
}

func (x *CountComment4VideoResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CountComment4VideoResponse) GetResults() []*CountResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type CountComment4UserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        []int64                `protobuf:"varint,1,rep,packed,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountComment4UserRequest) Reset() {
	*x = CountComment4UserRequest{}
	mi := &file_v1_comment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountComment4UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountComment4UserRequest) ProtoMessage() {}

func (x *CountComment4UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountComment4UserRequest.ProtoReflect.Descriptor instead.
func (*CountComment4UserRequest) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{14}
}

func (x *CountComment4UserRequest) GetUserId() []int64 {
	if x != nil {
		return x.UserId
	}
	return nil
}

type CountComment4UserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *Metadata              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Results       []*CountResult         `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountComment4UserResponse) Reset() {
	*x = CountComment4UserResponse{}
	mi := &file_v1_comment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountComment4UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountComment4UserResponse) ProtoMessage() {}

func (x *CountComment4UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_comment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountComment4UserResponse.ProtoReflect.Descriptor instead.
func (*CountComment4UserResponse) Descriptor() ([]byte, []int) {
	return file_v1_comment_proto_rawDescGZIP(), []int{15}
}

func (x *CountComment4UserResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *CountComment4UserResponse) GetResults() []*CountResult {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_v1_comment_proto protoreflect.FileDescriptor

const file_v1_comment_proto_rawDesc = "" +
	"\n" +
	"\x10v1/comment.proto\x12\x1cshortVideoCoreService.api.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x17validate/validate.proto\x1a\rv1/base.proto\"\xbf\x02\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\bvideo_id\x18\x02 \x01(\x03R\avideoId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x12\n" +
	"\x04date\x18\x04 \x01(\tR\x04date\x12\x1d\n" +
	"\n" +
	"like_count\x18\x05 \x01(\tR\tlikeCount\x12\x1f\n" +
	"\vreply_count\x18\x06 \x01(\tR\n" +
	"replyCount\x12\x17\n" +
	"\auser_id\x18\a \x01(\x03R\x06userId\x12\x1b\n" +
	"\tparent_id\x18\b \x01(\x03R\bparentId\x12\"\n" +
	"\rreply_user_id\x18\t \x01(\x03R\vreplyUserId\x12A\n" +
	"\bcomments\x18\n" +
	" \x03(\v2%.shortVideoCoreService.api.v1.CommentR\bcomments\"\xa5\x01\n" +
	"\x14CreateCommentRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1b\n" +
	"\tparent_id\x18\x04 \x01(\x03R\bparentId\x12\"\n" +
	"\rreply_user_id\x18\x05 \x01(\x03R\vreplyUserId\"\x94\x01\n" +
	"\x15CreateCommentResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12?\n" +
	"\acomment\x18\x02 \x01(\v2%.shortVideoCoreService.api.v1.CommentR\acomment\"N\n" +
	"\x14RemoveCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\"S\n" +
	"\x15RemoveCommentResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\"\x86\x01\n" +
	"\x18ListComment4VideoRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\x12O\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2/.shortVideoCoreService.api.v1.PaginationRequestR\n" +
	"pagination\"\xec\x01\n" +
	"\x19ListComment4VideoResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12A\n" +
	"\bcomments\x18\x02 \x03(\v2%.shortVideoCoreService.api.v1.CommentR\bcomments\x12P\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v20.shortVideoCoreService.api.v1.PaginationResponseR\n" +
	"pagination\"\x91\x01\n" +
	"\x1fListChildComment4CommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\x12O\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2/.shortVideoCoreService.api.v1.PaginationRequestR\n" +
	"pagination\"\xf3\x01\n" +
	" ListChildComment4CommentResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12A\n" +
	"\bcomments\x18\x02 \x03(\v2%.shortVideoCoreService.api.v1.CommentR\bcomments\x12P\n" +
	"\n" +
	"pagination\x18\x03 \x01(\v20.shortVideoCoreService.api.v1.PaginationResponseR\n" +
	"pagination\"6\n" +
	"\x15GetCommentByIdRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x03R\tcommentId\"\x95\x01\n" +
	"\x16GetCommentByIdResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12?\n" +
	"\acomment\x18\x02 \x01(\v2%.shortVideoCoreService.api.v1.CommentR\acomment\"3\n" +
	"\vCountResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x03R\x05count\"6\n" +
	"\x19CountComment4VideoRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x03(\x03R\avideoId\"\x9d\x01\n" +
	"\x1aCountComment4VideoResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12C\n" +
	"\aresults\x18\x02 \x03(\v2).shortVideoCoreService.api.v1.CountResultR\aresults\"3\n" +
	"\x18CountComment4UserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x03(\x03R\x06userId\"\x9c\x01\n" +
	"\x19CountComment4UserResponse\x12:\n" +
	"\x04meta\x18\x01 \x01(\v2&.shortVideoCoreService.api.v1.MetadataR\x04meta\x12C\n" +
	"\aresults\x18\x02 \x03(\v2).shortVideoCoreService.api.v1.CountResultR\aresults2\xb5\a\n" +
	"\x0eCommentService\x12x\n" +
	"\rCreateComment\x122.shortVideoCoreService.api.v1.CreateCommentRequest\x1a3.shortVideoCoreService.api.v1.CreateCommentResponse\x12x\n" +
	"\rRemoveComment\x122.shortVideoCoreService.api.v1.RemoveCommentRequest\x1a3.shortVideoCoreService.api.v1.RemoveCommentResponse\x12\x84\x01\n" +
	"\x11ListComment4Video\x126.shortVideoCoreService.api.v1.ListComment4VideoRequest\x1a7.shortVideoCoreService.api.v1.ListComment4VideoResponse\x12\x99\x01\n" +
	"\x18ListChildComment4Comment\x12=.shortVideoCoreService.api.v1.ListChildComment4CommentRequest\x1a>.shortVideoCoreService.api.v1.ListChildComment4CommentResponse\x12{\n" +
	"\x0eGetCommentById\x123.shortVideoCoreService.api.v1.GetCommentByIdRequest\x1a4.shortVideoCoreService.api.v1.GetCommentByIdResponse\x12\x87\x01\n" +
	"\x12CountComment4Video\x127.shortVideoCoreService.api.v1.CountComment4VideoRequest\x1a8.shortVideoCoreService.api.v1.CountComment4VideoResponse\x12\x84\x01\n" +
	"\x11CountComment4User\x126.shortVideoCoreService.api.v1.CountComment4UserRequest\x1a7.shortVideoCoreService.api.v1.CountComment4UserResponseBGZEgithub.com/cloudzenith/DouTok/backend/shortVideoCoreService/api/v1;v1b\x06proto3"

var (
	file_v1_comment_proto_rawDescOnce sync.Once
	file_v1_comment_proto_rawDescData []byte
)

func file_v1_comment_proto_rawDescGZIP() []byte {
	file_v1_comment_proto_rawDescOnce.Do(func() {
		file_v1_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_comment_proto_rawDesc), len(file_v1_comment_proto_rawDesc)))
	})
	return file_v1_comment_proto_rawDescData
}

var file_v1_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_v1_comment_proto_goTypes = []any{
	(*Comment)(nil),                          // 0: shortVideoCoreService.api.v1.Comment
	(*CreateCommentRequest)(nil),             // 1: shortVideoCoreService.api.v1.CreateCommentRequest
	(*CreateCommentResponse)(nil),            // 2: shortVideoCoreService.api.v1.CreateCommentResponse
	(*RemoveCommentRequest)(nil),             // 3: shortVideoCoreService.api.v1.RemoveCommentRequest
	(*RemoveCommentResponse)(nil),            // 4: shortVideoCoreService.api.v1.RemoveCommentResponse
	(*ListComment4VideoRequest)(nil),         // 5: shortVideoCoreService.api.v1.ListComment4VideoRequest
	(*ListComment4VideoResponse)(nil),        // 6: shortVideoCoreService.api.v1.ListComment4VideoResponse
	(*ListChildComment4CommentRequest)(nil),  // 7: shortVideoCoreService.api.v1.ListChildComment4CommentRequest
	(*ListChildComment4CommentResponse)(nil), // 8: shortVideoCoreService.api.v1.ListChildComment4CommentResponse
	(*GetCommentByIdRequest)(nil),            // 9: shortVideoCoreService.api.v1.GetCommentByIdRequest
	(*GetCommentByIdResponse)(nil),           // 10: shortVideoCoreService.api.v1.GetCommentByIdResponse
	(*CountResult)(nil),                      // 11: shortVideoCoreService.api.v1.CountResult
	(*CountComment4VideoRequest)(nil),        // 12: shortVideoCoreService.api.v1.CountComment4VideoRequest
	(*CountComment4VideoResponse)(nil),       // 13: shortVideoCoreService.api.v1.CountComment4VideoResponse
	(*CountComment4UserRequest)(nil),         // 14: shortVideoCoreService.api.v1.CountComment4UserRequest
	(*CountComment4UserResponse)(nil),        // 15: shortVideoCoreService.api.v1.CountComment4UserResponse
	(*Metadata)(nil),                         // 16: shortVideoCoreService.api.v1.Metadata
	(*PaginationRequest)(nil),                // 17: shortVideoCoreService.api.v1.PaginationRequest
	(*PaginationResponse)(nil),               // 18: shortVideoCoreService.api.v1.PaginationResponse
}
var file_v1_comment_proto_depIdxs = []int32{
	0,  // 0: shortVideoCoreService.api.v1.Comment.comments:type_name -> shortVideoCoreService.api.v1.Comment
	16, // 1: shortVideoCoreService.api.v1.CreateCommentResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	0,  // 2: shortVideoCoreService.api.v1.CreateCommentResponse.comment:type_name -> shortVideoCoreService.api.v1.Comment
	16, // 3: shortVideoCoreService.api.v1.RemoveCommentResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	17, // 4: shortVideoCoreService.api.v1.ListComment4VideoRequest.pagination:type_name -> shortVideoCoreService.api.v1.PaginationRequest
	16, // 5: shortVideoCoreService.api.v1.ListComment4VideoResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	0,  // 6: shortVideoCoreService.api.v1.ListComment4VideoResponse.comments:type_name -> shortVideoCoreService.api.v1.Comment
	18, // 7: shortVideoCoreService.api.v1.ListComment4VideoResponse.pagination:type_name -> shortVideoCoreService.api.v1.PaginationResponse
	17, // 8: shortVideoCoreService.api.v1.ListChildComment4CommentRequest.pagination:type_name -> shortVideoCoreService.api.v1.PaginationRequest
	16, // 9: shortVideoCoreService.api.v1.ListChildComment4CommentResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	0,  // 10: shortVideoCoreService.api.v1.ListChildComment4CommentResponse.comments:type_name -> shortVideoCoreService.api.v1.Comment
	18, // 11: shortVideoCoreService.api.v1.ListChildComment4CommentResponse.pagination:type_name -> shortVideoCoreService.api.v1.PaginationResponse
	16, // 12: shortVideoCoreService.api.v1.GetCommentByIdResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	0,  // 13: shortVideoCoreService.api.v1.GetCommentByIdResponse.comment:type_name -> shortVideoCoreService.api.v1.Comment
	16, // 14: shortVideoCoreService.api.v1.CountComment4VideoResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	11, // 15: shortVideoCoreService.api.v1.CountComment4VideoResponse.results:type_name -> shortVideoCoreService.api.v1.CountResult
	16, // 16: shortVideoCoreService.api.v1.CountComment4UserResponse.meta:type_name -> shortVideoCoreService.api.v1.Metadata
	11, // 17: shortVideoCoreService.api.v1.CountComment4UserResponse.results:type_name -> shortVideoCoreService.api.v1.CountResult
	1,  // 18: shortVideoCoreService.api.v1.CommentService.CreateComment:input_type -> shortVideoCoreService.api.v1.CreateCommentRequest
	3,  // 19: shortVideoCoreService.api.v1.CommentService.RemoveComment:input_type -> shortVideoCoreService.api.v1.RemoveCommentRequest
	5,  // 20: shortVideoCoreService.api.v1.CommentService.ListComment4Video:input_type -> shortVideoCoreService.api.v1.ListComment4VideoRequest
	7,  // 21: shortVideoCoreService.api.v1.CommentService.ListChildComment4Comment:input_type -> shortVideoCoreService.api.v1.ListChildComment4CommentRequest
	9,  // 22: shortVideoCoreService.api.v1.CommentService.GetCommentById:input_type -> shortVideoCoreService.api.v1.GetCommentByIdRequest
	12, // 23: shortVideoCoreService.api.v1.CommentService.CountComment4Video:input_type -> shortVideoCoreService.api.v1.CountComment4VideoRequest
	14, // 24: shortVideoCoreService.api.v1.CommentService.CountComment4User:input_type -> shortVideoCoreService.api.v1.CountComment4UserRequest
	2,  // 25: shortVideoCoreService.api.v1.CommentService.CreateComment:output_type -> shortVideoCoreService.api.v1.CreateCommentResponse
	4,  // 26: shortVideoCoreService.api.v1.CommentService.RemoveComment:output_type -> shortVideoCoreService.api.v1.RemoveCommentResponse
	6,  // 27: shortVideoCoreService.api.v1.CommentService.ListComment4Video:output_type -> shortVideoCoreService.api.v1.ListComment4VideoResponse
	8,  // 28: shortVideoCoreService.api.v1.CommentService.ListChildComment4Comment:output_type -> shortVideoCoreService.api.v1.ListChildComment4CommentResponse
	10, // 29: shortVideoCoreService.api.v1.CommentService.GetCommentById:output_type -> shortVideoCoreService.api.v1.GetCommentByIdResponse
	13, // 30: shortVideoCoreService.api.v1.CommentService.CountComment4Video:output_type -> shortVideoCoreService.api.v1.CountComment4VideoResponse
	15, // 31: shortVideoCoreService.api.v1.CommentService.CountComment4User:output_type -> shortVideoCoreService.api.v1.CountComment4UserResponse
	25, // [25:32] is the sub-list for method output_type
	18, // [18:25] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_v1_comment_proto_init() }
func file_v1_comment_proto_init() {
	if File_v1_comment_proto != nil {
		return
	}
	file_v1_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_comment_proto_rawDesc), len(file_v1_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_comment_proto_goTypes,
		DependencyIndexes: file_v1_comment_proto_depIdxs,
		MessageInfos:      file_v1_comment_proto_msgTypes,
	}.Build()
	File_v1_comment_proto = out.File
	file_v1_comment_proto_goTypes = nil
	file_v1_comment_proto_depIdxs = nil
}
