FROM golang:1.22-alpine AS builder

WORKDIR /build/backend/shortVideoApiService

ARG proxy=https://goproxy.cn,direct
ENV proxy=$proxy
RUN echo "proxy: $proxy"

ENV GOPROXY=${proxy}

# 复制 go.mod 和 go.sum
COPY backend/shortVideoApiService/go.mod backend/shortVideoApiService/go.sum ./

# 复制依赖模块的 go.mod 和 go.sum 到正确的相对路径位置
COPY backend/shortVideoCoreService/go.mod backend/shortVideoCoreService/go.sum ../shortVideoCoreService/
COPY backend/gopkgs/go.mod backend/gopkgs/go.sum ../gopkgs/
COPY backend/baseService/go.mod backend/baseService/go.sum ../baseService/

RUN go mod download

# 复制所有源代码
COPY backend/shortVideoApiService .
COPY backend/shortVideoCoreService ../shortVideoCoreService
COPY backend/gopkgs ../gopkgs
COPY backend/baseService ../baseService

RUN CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -ldflags "-X google.golang.org/protobuf/reflect/protoregistry.conflictPolicy=warn" -a -o serve ./cmd/

FROM golang:1.22-alpine AS promtail-builder

WORKDIR /build

ARG proxy=https://goproxy.cn,direct
ENV proxy=$proxy
RUN echo "proxy: $proxy"

ENV GOPROXY=${proxy}

RUN wget https://github.com/grafana/loki/archive/refs/tags/v3.1.1.zip
RUN unzip v3.1.1.zip

WORKDIR /build/loki-3.1.1

RUN go mod download
RUN CGO_ENABLED=0 go build ./clients/cmd/promtail

FROM alpine:3.16 AS runner

WORKDIR /app

RUN mkdir tmp
RUN mkdir logs
RUN mkdir configs

COPY --from=builder /build/serve /app/serve
COPY backend/shortVideoApiService/configs /app/configs
COPY backend/shortVideoApiService/entrypoint.sh /app/entrypoint.sh
COPY backend/shortVideoApiService/promtail.yaml /app/promtail.yaml

COPY --from=promtail-builder /build/loki-3.1.1/promtail /app/promtail

ENTRYPOINT ["./entrypoint.sh"]
