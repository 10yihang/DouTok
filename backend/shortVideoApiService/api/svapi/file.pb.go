// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: svapi/file.proto

package svapi

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreSignUploadPublicFileRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Hash     string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	FileType string                 `protobuf:"bytes,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// gotags: json`size,omitempty,string`
	Size          int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSignUploadPublicFileRequest) Reset() {
	*x = PreSignUploadPublicFileRequest{}
	mi := &file_svapi_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSignUploadPublicFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignUploadPublicFileRequest) ProtoMessage() {}

func (x *PreSignUploadPublicFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignUploadPublicFileRequest.ProtoReflect.Descriptor instead.
func (*PreSignUploadPublicFileRequest) Descriptor() ([]byte, []int) {
	return file_svapi_file_proto_rawDescGZIP(), []int{0}
}

func (x *PreSignUploadPublicFileRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PreSignUploadPublicFileRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *PreSignUploadPublicFileRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PreSignUploadPublicFileResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Url   string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// @gotags: json:"file_id,omitempty,string"
	FileId        int64 `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty,string"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSignUploadPublicFileResponse) Reset() {
	*x = PreSignUploadPublicFileResponse{}
	mi := &file_svapi_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSignUploadPublicFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignUploadPublicFileResponse) ProtoMessage() {}

func (x *PreSignUploadPublicFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignUploadPublicFileResponse.ProtoReflect.Descriptor instead.
func (*PreSignUploadPublicFileResponse) Descriptor() ([]byte, []int) {
	return file_svapi_file_proto_rawDescGZIP(), []int{1}
}

func (x *PreSignUploadPublicFileResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PreSignUploadPublicFileResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type ReportPublicFileUploadedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportPublicFileUploadedRequest) Reset() {
	*x = ReportPublicFileUploadedRequest{}
	mi := &file_svapi_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportPublicFileUploadedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPublicFileUploadedRequest) ProtoMessage() {}

func (x *ReportPublicFileUploadedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPublicFileUploadedRequest.ProtoReflect.Descriptor instead.
func (*ReportPublicFileUploadedRequest) Descriptor() ([]byte, []int) {
	return file_svapi_file_proto_rawDescGZIP(), []int{2}
}

func (x *ReportPublicFileUploadedRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type ReportPublicFileUploadedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ObjectName    string                 `protobuf:"bytes,1,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportPublicFileUploadedResponse) Reset() {
	*x = ReportPublicFileUploadedResponse{}
	mi := &file_svapi_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportPublicFileUploadedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportPublicFileUploadedResponse) ProtoMessage() {}

func (x *ReportPublicFileUploadedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportPublicFileUploadedResponse.ProtoReflect.Descriptor instead.
func (*ReportPublicFileUploadedResponse) Descriptor() ([]byte, []int) {
	return file_svapi_file_proto_rawDescGZIP(), []int{3}
}

func (x *ReportPublicFileUploadedResponse) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

var File_svapi_file_proto protoreflect.FileDescriptor

const file_svapi_file_proto_rawDesc = "" +
	"\n" +
	"\x10svapi/file.proto\x12\x05svapi\x1a\x1cgoogle/api/annotations.proto\x1a\x1bbuf/validate/validate.proto\x1a\x10svapi/base.proto\"e\n" +
	"\x1ePreSignUploadPublicFileRequest\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x1b\n" +
	"\tfile_type\x18\x02 \x01(\tR\bfileType\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"L\n" +
	"\x1fPreSignUploadPublicFileResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\x03R\x06fileId\":\n" +
	"\x1fReportPublicFileUploadedRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\"C\n" +
	" ReportPublicFileUploadedResponse\x12\x1f\n" +
	"\vobject_name\x18\x01 \x01(\tR\n" +
	"objectName2\x91\x02\n" +
	"\vFileService\x12|\n" +
	"\x1aPreSignUploadingPublicFile\x12%.svapi.PreSignUploadPublicFileRequest\x1a&.svapi.PreSignUploadPublicFileResponse\"\x0f\x82\xd3\xe4\x93\x02\t:\x01*\"\x04file\x12\x83\x01\n" +
	"\x18ReportPublicFileUploaded\x12&.svapi.ReportPublicFileUploadedRequest\x1a'.svapi.ReportPublicFileUploadedResponse\"\x16\x82\xd3\xe4\x93\x02\x10:\x01*\"\vfile/reportB)Z'github.com/cloudzenith/DouTok/...;svapib\x06proto3"

var (
	file_svapi_file_proto_rawDescOnce sync.Once
	file_svapi_file_proto_rawDescData []byte
)

func file_svapi_file_proto_rawDescGZIP() []byte {
	file_svapi_file_proto_rawDescOnce.Do(func() {
		file_svapi_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_svapi_file_proto_rawDesc), len(file_svapi_file_proto_rawDesc)))
	})
	return file_svapi_file_proto_rawDescData
}

var file_svapi_file_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_svapi_file_proto_goTypes = []any{
	(*PreSignUploadPublicFileRequest)(nil),   // 0: svapi.PreSignUploadPublicFileRequest
	(*PreSignUploadPublicFileResponse)(nil),  // 1: svapi.PreSignUploadPublicFileResponse
	(*ReportPublicFileUploadedRequest)(nil),  // 2: svapi.ReportPublicFileUploadedRequest
	(*ReportPublicFileUploadedResponse)(nil), // 3: svapi.ReportPublicFileUploadedResponse
}
var file_svapi_file_proto_depIdxs = []int32{
	0, // 0: svapi.FileService.PreSignUploadingPublicFile:input_type -> svapi.PreSignUploadPublicFileRequest
	2, // 1: svapi.FileService.ReportPublicFileUploaded:input_type -> svapi.ReportPublicFileUploadedRequest
	1, // 2: svapi.FileService.PreSignUploadingPublicFile:output_type -> svapi.PreSignUploadPublicFileResponse
	3, // 3: svapi.FileService.ReportPublicFileUploaded:output_type -> svapi.ReportPublicFileUploadedResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_svapi_file_proto_init() }
func file_svapi_file_proto_init() {
	if File_svapi_file_proto != nil {
		return
	}
	file_svapi_base_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_svapi_file_proto_rawDesc), len(file_svapi_file_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svapi_file_proto_goTypes,
		DependencyIndexes: file_svapi_file_proto_depIdxs,
		MessageInfos:      file_svapi_file_proto_msgTypes,
	}.Build()
	File_svapi_file_proto = out.File
	file_svapi_file_proto_goTypes = nil
	file_svapi_file_proto_depIdxs = nil
}
